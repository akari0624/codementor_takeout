{"version":3,"sources":["layout/search_and_favorite/index.js","actions/favorite_article/index.js","components/SaveButton/index.js","components/ArticleItem/index.js","components/ArticleList/index.js","components/Input/index.js","pages/Search/components/ArticleList/index.js","components/Loading/index.js","actions/article/index.js","actions/extra_data/index.js","pages/Search/index.js"],"names":["LayoutWrapper","styled","main","TabsBackground","div","HighlightTab","button","NotHighlightTab","SearchAndFavoriteTabLayout","children","history","useHistory","handleClick","path","push","url","name","map","idx","location","pathname","type","onClick","addFavoriteArticle","createAction","ADD_FAVORITE_ARTICLES","payload_articleData","removeFavoriteArticle","REMOVE_FAVORITE_ARTICLE","payload_articleId","SaveBTN","span","saved","SaveButton","isSaved","id","articleData","rest","useState","_isSaved","set_IsSaved","dispatch","useDispatch","data-testid","deleteFavorite","prev","addFavorite","toggleSave","ItemWrapper","ArticleItem","title","author_name","categories","showSave","setShowSave","onMouseEnter","onMouseLeave","className","c","ArticleList","data","length","d","Input","register","onChange","rName","ref","articlesSelector","state","article","articles","favoriteIdsSelector","favorite","ArticleListBind","props","useSelector","favoriteIds","checkedArticles","useMemo","a","has","Loading","replaceArticles","REPLACE_ARTICLES","payload","keepSearchKeyword","KEEP_SEARCH_KEYWORD","payload_keyword","algoliaIndex","algoliasearch","process","initIndex","FormWrapper","section","SEARCH_KEYWORD_NAME","searchKeywordSelector","extraData","searchKeyword","SearchAndListPage","useForm","mode","defaultValues","keyword","handleSubmit","setValue","getValues","isSubmitting","setIsSubmitting","handleChange","_debounce","evt","console","log","target","value","search","res","hits","onSubmit","useCallback","formData","useEffect"],"mappings":"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","file":"static/js/6.2a9d3b75.chunk.js","sourcesContent":["import { useCallback } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport styled from 'styled-components'\n\nconst LayoutWrapper = styled.main`\n  width: 100vw;\n  height: fill-available;\n`\n\nconst TabsBackground = styled.div`\n  background-color: #efeeef;\n  width: 100vw;\n  height: 70px;\n  display: flex;\n  align-items: flex-end;\n`\n\nconst HighlightTab = styled.button`\n  background-color: #ffffff;\n  color: #000000;\n  padding: 0.5rem 1.2rem;\n  border: none;\n`\n\nconst NotHighlightTab = styled.button`\n  background-color: #efeeef;\n  color: #a9a8a9;\n  padding: 0.5rem 1.2rem;\n  border: none;\n`\n\nexport default function SearchAndFavoriteTabLayout({ children }) {\n  const history = useHistory()\n\n  const RedirectButtons = [\n    {\n      url: '/search',\n      name: 'Search',\n    },\n    {\n      url: '/favorite',\n      name: 'Favorite',\n    },\n  ]\n\n  const handleClick = (path) => {\n    history.push(path)\n  }\n  return (\n    <LayoutWrapper>\n      <TabsBackground>\n        {RedirectButtons.map(({ url, name }, idx) => (\n          history?.location?.pathname === url || (history?.location?.pathname === '/' && idx === 0) ? (\n            <HighlightTab\n              key={name}\n              type=\"button\"\n              onClick={() => {\n                handleClick(url)\n              }}\n            >\n              {name}\n            </HighlightTab>\n          ) : (\n            <NotHighlightTab\n              key={name}\n              type=\"button\"\n              onClick={() => {\n                handleClick(url)\n              }}\n            >\n              {name}\n            </NotHighlightTab>\n          )\n        ))}\n      </TabsBackground>\n      {children}\n    </LayoutWrapper>\n  )\n}\n","import { createAction } from 'redux-actions'\nimport { ADD_FAVORITE_ARTICLES, REMOVE_FAVORITE_ARTICLE } from './type'\n\nexport const addFavoriteArticle = createAction(\n  ADD_FAVORITE_ARTICLES,\n  (payload_articleData) => payload_articleData\n)\n\nexport const removeFavoriteArticle = createAction(\n  REMOVE_FAVORITE_ARTICLE,\n  (payload_articleId) => payload_articleId\n)\n","import { useState } from 'react'\nimport styled from 'styled-components'\nimport { useDispatch } from 'react-redux'\nimport { addFavorite, deleteFavorite } from 'actions/favoriteId'\nimport {\n  addFavoriteArticle,\n  removeFavoriteArticle,\n} from 'actions/favorite_article'\n\nconst SaveBTN = styled.span`\n  padding: 2px 3px;\n  border: 1px solid #000000;\n  background-color: ${({ saved }) => (saved ? '#CCCBCD' : '#FFFFFF')};\n  color: ${({ saved }) => (saved ? '#FFFFFF' : '#000000')};\n  &:hover {\n    cursor: pointer;\n  }\n`\n\nconst toggleSave = (isSaved, id, set_IsSaved, dispatch, articleData) => {\n  if (!isSaved) {\n    // do save\n    dispatch(addFavorite(id))\n    dispatch(addFavoriteArticle(articleData))\n    set_IsSaved((prev) => !prev)\n  } else {\n    // do delete from favorite\n    dispatch(deleteFavorite(id))\n    dispatch(removeFavoriteArticle(id))\n    set_IsSaved((prev) => !prev)\n  }\n}\n\nexport const SaveBTN_testId = 'saveBTN_id'\n\nconst SaveButton = ({ isSaved, id, articleData, ...rest }) => {\n  const [_isSaved, set_IsSaved] = useState(isSaved)\n\n  const dispatch = useDispatch()\n  return (\n    <SaveBTN\n      data-testid={SaveBTN_testId}\n      {...rest}\n      saved={_isSaved}\n      onClick={() =>\n        toggleSave(_isSaved, id, set_IsSaved, dispatch, articleData)\n      }\n    >\n      {_isSaved ? 'Saved' : 'Save'}\n    </SaveBTN>\n  )\n}\n\nexport default SaveButton\n","import {useState} from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport SaveButton from 'components/SaveButton'\n\nconst ItemWrapper = styled.div`\n  display: flex;\n  position: relative;\n  flex-direction: column;\n  border-bottom: 1px solid grey;\n  margin-bottom: 3px;\n  padding: .5rem 1rem;\n  .title {\n    font-size: 1.5rem;\n    font-weight: bold;\n    margin-bottom: .4rem;\n  }\n  .authorAndTags {\n    display: flex;\n    .author {\n      margin-right: 1rem;\n    }\n    .tags {\n      span {\n        background-color: #efeeef;\n        padding: 2px 3px;\n        margin-right: .5rem;\n      }\n    }\n    .show_on_hover {\n      position: absolute;\n      right: 2rem;\n      bottom: .8rem;\n    }\n  }\n`\n\nfunction ArticleItem({ articleData, ...rest }) {\n  const { id, title, author_name, categories, isSaved } = articleData\n  const [showSave, setShowSave] = useState(false)\n  return (\n    <ItemWrapper {...rest} onMouseEnter={() => {setShowSave(true)}} onMouseLeave={() => {setShowSave(false)}} >\n      <div className=\"title\">{title}</div>\n      <div className=\"authorAndTags\">\n        <div className=\"author\">{author_name}</div>\n        <div className=\"tags\">\n          {categories.map((c) => (\n            <span key={c}>{c}</span>\n          ))}\n        </div>\n        {showSave && <SaveButton className=\"show_on_hover\" isSaved={isSaved} id={id} articleData={articleData} />}\n      </div>\n    </ItemWrapper>\n  )\n}\n\nArticleItem.propTypes = {}\n\nexport default ArticleItem\n","import ArtileItem from 'components/ArticleItem'\n\nexport const ITEM_TEST_ID = 'id_article'\n\nfunction ArticleList({ data }) {\n  if (data?.length === 0 || !data) {\n    return <div>no result</div>\n  }\n  return (\n    <div>\n      {data.map((d) => (\n        <ArtileItem data-testid={ITEM_TEST_ID} key={d.id} articleData={d} />\n      ))}\n    </div>\n  )\n}\n\nexport default ArticleList\n","import PropTypes from 'prop-types'\n\nfunction Input({ register, name, onChange }) {\n  const {name: rName, ref} = register(name)\n  return (\n    <input\n      type=\"text\"\n      name={rName}\n      ref={ref}\n      onChange={onChange}\n    />\n  )\n}\n\nInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  register: PropTypes.func.isRequired,\n  onChange: PropTypes.func,\n}\n\nexport default Input\n","import { useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport ArticleList from 'components/ArticleList'\nimport { useSelector } from 'react-redux'\n\nconst articlesSelector = (state) => state?.article?.articles\nconst favoriteIdsSelector = (state) => state?.favorite\n\nfunction ArticleListBind(props) {\n  const articles = useSelector(articlesSelector)\n  const favoriteIds = useSelector(favoriteIdsSelector)\n\n  const checkedArticles = useMemo(\n    () =>\n      articles.map((a) => {\n        if (favoriteIds.has(a.id)) {\n          return {...a, isSaved: true}\n        } else {\n          return {...a, isSaved: false}\n        }\n      }),\n    [articles, favoriteIds]\n  )\n\n  return <ArticleList data={checkedArticles} />\n}\n\nArticleListBind.propTypes = {}\n\nexport default ArticleListBind\n","function Loading(props) {\n  return (\n    <div>\n      loading...\n    </div>\n  )\n}\n\n\nexport default Loading\n","import { createAction } from 'redux-actions';\nimport {REPLACE_ARTICLES} from './type'\n\nexport const replaceArticles = createAction(\n  REPLACE_ARTICLES,\n  (payload) => payload\n)\n","import { createAction } from 'redux-actions';\nimport {KEEP_SEARCH_KEYWORD} from './type'\n\nexport const keepSearchKeyword = createAction(\n  KEEP_SEARCH_KEYWORD,\n  (payload_keyword) => payload_keyword\n)\n","import { useCallback, useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { useForm } from 'react-hook-form'\nimport Input from 'components/Input'\nimport algoliasearch from 'algoliasearch/lite'\nimport ArticleListBind from './components/ArticleList'\nimport Loading from 'components/Loading'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { replaceArticles } from 'actions/article'\nimport { keepSearchKeyword } from 'actions/extra_data'\nimport SearchAndFavoriteTabLayout from 'layout/search_and_favorite'\nimport styled from 'styled-components'\nimport _debounce from 'lodash.debounce'\n\nconst client = algoliasearch(\n  process.env.REACT_APP_ALGOLIA_APLICATION_ID,\n  process.env.REACT_APP_ALGOLIA_APLICATION_KEY\n)\nconst algoliaIndex = client.initIndex(process.env.REACT_APP_ALGOLIA_INDEX_NAME)\n\nconst FormWrapper = styled.section`\n  margin-left: 2rem;\n  padding-top: 1.5rem;\n  padding-bottom: 1.5rem;\n`\nconst SEARCH_KEYWORD_NAME = 'keyword'\n\nconst searchKeywordSelector = (state) => state?.extraData?.searchKeyword\nfunction SearchAndListPage(props) {\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    getValues,\n    // formState: { isDirty, isValid },\n  } = useForm({\n    mode: 'onChange',\n    defaultValues: {\n      keyword: '',\n    },\n  })\n  const searchKeyword = useSelector(searchKeywordSelector)\n  const dispatch = useDispatch()\n\n  const [isSubmitting, setIsSubmitting] = useState(false)\n\n  const handleChange = _debounce(async (evt) => {\n    console.log('show')\n    try {\n      const keyword = evt.target.value\n      setValue(SEARCH_KEYWORD_NAME, keyword)\n      // const keyword = getValues(SEARCH_KEYWORD_NAME)\n      console.log('keyword', keyword)\n      if (keyword === '') {\n        return\n      }\n      setIsSubmitting((prev) => true)\n      const res = await algoliaIndex.search(keyword)\n      const { hits } = res\n      setIsSubmitting((prev) => false)\n      dispatch(replaceArticles(hits))\n    } catch (err) {\n      console.log('error!!', err)\n    }\n  }, 500)\n\n  const onSubmit = useCallback(async (formData) => {\n    try {\n      const keyword = formData?.keyword\n      setIsSubmitting((prev) => true)\n      const res = await algoliaIndex.search(keyword)\n      const { hits } = res\n      setIsSubmitting((prev) => false)\n      dispatch(replaceArticles(hits))\n    } catch (err) {\n      console.log('error!!', err)\n    }\n  }, [])\n\n  useEffect(() => {\n    // 只有在first mount的時候有值的話 取值 update欄位上的值\n    if (searchKeyword) {\n      setValue(SEARCH_KEYWORD_NAME, searchKeyword)\n    }\n    return () => {\n      dispatch(keepSearchKeyword(getValues(SEARCH_KEYWORD_NAME)))\n    }\n  }, [searchKeyword])\n\n  return (\n    <SearchAndFavoriteTabLayout>\n      <FormWrapper>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <Input name={SEARCH_KEYWORD_NAME} register={register} onChange={handleChange} />\n        </form>\n      </FormWrapper>\n      <div>{isSubmitting ? <Loading /> : <ArticleListBind />}</div>\n    </SearchAndFavoriteTabLayout>\n  )\n}\n\nSearchAndListPage.propTypes = {}\n\nexport default SearchAndListPage\n"],"sourceRoot":""}